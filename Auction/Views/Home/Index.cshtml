@using Auction.DTO.SortOptions
@model Auction.DTO.Pagination.IndexViewModel

@{
    ViewData["Title"] = "Home Page";
}

<div class="row d-flex justify-content-between px-3 mb-1">
    <p class="font-weight-norma text-secondary">
        Total items: 
        <span id="items-count">@Model.PagingInfo.TotalItems</span>
    </p>
    <div class="form-inline px-1">
        <div class="row filter">
            <p class="text-muted">ShowOptionsing:</p>
            <select asp-for="ShowOptions" asp-items="Html.GetEnumSelectList<ShowOptions>()"
                    class="form-control form-control-sm"
                    id="show-filter"
                    onchange="onChange()">
            </select>
        </div>
        <div class="row filter">
            <p class="text-muted">Category:</p>
            <select class="form-control form-control-sm">
                <option>any</option>
                <option>active</option>
                <option>sold</option>
            </select>
        </div>
        <div class="row filter">
            <p class="text-muted">SortBy:</p>
            <select asp-for="SortBy" asp-items="Html.GetEnumSelectList<SortBy>()"
                    class="form-control form-control-sm"
                    id="sort-filter"
                    onchange="onChange()">
            </select>
        </div>
    </div>
</div>

<div id="lot-view-container">
    @await Html.PartialAsync("_LotView", Model)
</div>



@section Scripts
{
    <script src="~/js/lotListPage.js"></script>
}
